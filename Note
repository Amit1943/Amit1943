Design principles
In the cloud, there are a number of principles that can help you strengthen your workload security:

Implement a strong identity foundation: Implement the principle of least privilege and enforce separation of duties with appropriate authorization for each interaction with your AWS resources. Centralize identity management, and aim to eliminate reliance on long-term static credentials.

Enable traceability: Monitor, alert, and audit actions and changes to your environment in real time. Integrate log and metric collection with systems to automatically investigate and take action.

Apply security at all layers: Apply a defense in depth approach with multiple security controls. Apply to all layers (for example, edge of network, VPC, load balancing, every instance and compute service, operating system, application, and code).

Automate security best practices: Automated software-based security mechanisms improve your ability to securely scale more rapidly and cost-effectively. Create secure architectures, including the implementation of controls that are defined and managed as code in version-controlled templates.

Protect data in transit and at rest: Classify your data into sensitivity levels and use mechanisms, such as encryption, tokenization, and access control where appropriate.

Keep people away from data: Use mechanisms and tools to reduce or eliminate the need for direct access or manual processing of data. This reduces the risk of mishandling or modification and human error when handling sensitive data.

Prepare for security events: Prepare for an incident by having incident management and investigation policy and processes that align to your organizational requirements. Run incident response simulations and use tools with automation to increase your speed for detection, investigation, and recovery.

Definition
Security in the cloud is composed of six areas:

Foundations
Identity and access management
Detection
Infrastructure protection
Data protection
Incident response
https://youtu.be/4yJp5-jGGNk
WAF (or) DDOS (or) Layer 3 (or) Layer 7 security (or) Vulnerability (or) SIEM
======================================
https://reciprocity.com/blog/the-6-key-pillars-of-cloud-security/
https://www.checkpoint.com/cyber-hub/cloud-security/what-is-cloud-security/
https://www.checkpoint.com/solutions/amazon-aws-security/
https://www.checkpoint.com/cyber-hub/cloud-security/what-is-cloud-security/
https://www.perfectiongeeks.com/4four-areas-of-cloud-security



================================================================================================
Must have experience around End to End cloud security design and Architecture experience

·         Must have experience around Design of security controls, product best fit analysis to ensure end to end security covering different faucets of architecture e.g. Layered security, Zoning, Integration aspects, API, Endpoint security, Data security, Compliance and regulations, Threat intelligence, Threat exposure &incident management aspects for the cloud deployments for the AWS/Azure/GCP environment

·         High level experience on Infrastructure Security Products design and deployment experience for cloud environments like (Security Groups, NACL, WAF, Inspector, cloud front, cloud watch, RDS, Shield, Cloud Config , Key management, IAM etc. is must
 
·         Hands-on experience in the technical deployment, configuration, integration, support, and administration of security technologies (e.g. Firewalls, IPS, DDoS, SIEM, WAF, Endpoint etc.) for cloud environment is must.
·         Knowledge about Containers Security/Dockers/Kubernetes/Micro services
·         Experience around creating and audit of security best practices and implementation of security principles across the organization, to meet business goals along with customer and regulatory requirements
·         Must have basic knowledge and experience around ITIL or Key process-oriented domains like incident management, configuration management, change management, problem management
·         Should have done security assessment against NIST Frameworks, Cloud security Alliance etc.
·         Should have deep understanding of cloud compute resources (network / storage)
·         Able to use adequate set of security controls for shaping security posture in IaaS and PaaS based environments.
·         Able to demonstrate POC environment with complex cloud security architectures and cloud native security controls.
·         Have understanding of Cloud Governance, Regulatory and Compliances standards like CIS Benchmarks, NIST Framework, PCI-DSS, GDPR, etc.
·         Able to drive cloud security risk assessment and identify the GAPs and define remediation approach by using right set of security controls to conclude the assessment.
·         Understanding of right set of security solutions to be integrated onto the cloud

 Have you used File adapter? where should we use FTP adapter and where to use file adapter?
 Technical flow behind connectivity agent? -- basically need to know how it is different from VPN and IP processing system
 
 Risk Analysis and mitigation plan


such as AWS Identity and Access Management (IAM),
AWS CloudTrail, AWS Key Management Service (AWS KMS),
AWS WAF, Amazon GuardDuty, and AWS Security Hub are
As just one example, using Amazon Inspector and AWS Systems Manager helps customers
automate patching for infrastructure and applications, reducing the burden of manually patching, easing
the process of patching multiple operating systems, and boosting customer productivity
Machine learning and artificial intelligence will add a critical layer of automation to
cloud security
AWS services like Amazon GuardDuty, Amazon Detective,
Amazon CodeGuru, and Amazon Macie will continue to lay the groundwork for integration of security and
machine learning, helping customers with intelligent recommendations, at scale


https://d0.awsstatic.com/whitepapers/compliance/AWS_CIS_Foundations_Benchmark.pdf
==================================================
hanu
Have Hands-on technical minimum 8+ Years of Experience designing and implementing security solutions for Azure across IaaS and PaaS models and environments (Public, Private, Hybrid).
Minimum 4+ Years of Experience in architecting role in Azure/Hybrid Cloud is mandatory.
Acting as a cloud security subject matter expert and work in conjunction with other project teams on the public / private / hybrid cloud ecosystem to develop security solutions.
Comfortability with cloud security domains, such as identity management, logging and monitoring, configuration management, network design, security assessment and governance frameworks
Deep technical know-how and experience in designing and implementing Cloud Security solutions, Microsoft Azure Security technologies, including the broader areas of Microsoft Windows security and Microsoft Enterprise, Mobility and Security suite.
Experience driving escalation, prioritization, and coordination of high severity Security incidents (Zero Day) and designing appropriate communication plans to all levels of the organization.
One or more Firewall experience - Azure Firewall, WAF, Barracuda, Fortinet, Palo Alto.
Azure Sentinel or any other SIEM, Writing KUSTO queries, Any Automation language.
Skills on Nessus, Qualys, or any other VA / VM tool
Knowledge of Governance/ Compliance/Standards such as NIST, OWASP CSA, GDPR ISO 27001, FedRAMP, GovCloud, etc.
Knowledge on EDR solutions, threat investigations and analytics
In possession of or working toward industry recognized cloud security certifications such as CCSK, Azure Security Engineer, Azure Solution Architect Expert, Good to have certifications - ISC2 CISSP, CCSP, OSCP
Knowledge and understanding across a wide range of technology domains and application frameworks and have ability to quickly grasp relationships of various disciplines.
Excellent communication skills with strong business and technical vision
Experience demonstrating strong leadership, self-motivation, and accountability.
Experience on leading complex projects cross-functionally
Must be comfortable working in projects round the clock (24*7) environments.
Must prepare documents like Project Plan, Risk matrix, run book, SOP, implementation documents and other related documents.
Good knowledge on ITIL process.


www
6 CV I had shared

Lalit already working
Akshata got job

Vikky prakash
Damini
Vaishnavi  (B.Tech)
BhagyaShri T kadam

============================================
Domain 1: Design Secure Architectures
Task Statement 1: Design secure access to AWS resources.
Knowledge of:
• Access controls and management across multiple accounts
• AWS federated access and identity services (for example, AWS Identity and Access
Management [IAM], AWS Single Sign-On [AWS SSO])
• AWS global infrastructure (for example, Availability Zones, AWS Regions)
• AWS security best practices (for example, the principle of least privilege)
• The AWS shared responsibility model
Skills in:
• Applying AWS security best practices to IAM users and root users (for example, multi-factor
authentication [MFA])
• Designing a flexible authorization model that includes IAM users, groups, roles, and policies
• Designing a role-based access control strategy (for example, AWS Security Token Service [AWS
STS], role switching, cross-account access)
• Designing a security strategy for multiple AWS accounts (for example, AWS Control Tower,
service control policies [SCPs])
• Determining the appropriate use of resource policies for AWS services
• Determining when to federate a directory service with IAM roles
Task Statement 2: Design secure workloads and applications.
Knowledge of:
• Application configuration and credentials security
• AWS service endpoints
• Control ports, protocols, and network traffic on AWS
• Secure application access
• Security services with appropriate use cases (for example, Amazon Cognito, Amazon
GuardDuty, Amazon Macie)
• Threat vectors external to AWS (for example, DDoS, SQL injection)
Skills in:
• Designing VPC architectures with security components (for example, security groups, route
tables, network ACLs, NAT gateways)
• Determining network segmentation strategies (for example, using public subnets and private
subnets)
• Integrating AWS services to secure applications (for example, AWS Shield, AWS WAF, AWS
SSO, AWS Secrets Manager)
• Securing external network connections to and from the AWS Cloud (for example, VPN, AWS
Direct Connect)
Version 1.0 SAA-C03 4 | PAGE
Task Statement 3: Determine appropriate data security controls.
Knowledge of:
• Data access and governance
• Data recovery
• Data retention and classification
• Encryption and appropriate key management
Skills in:
• Aligning AWS technologies to meet compliance requirements
• Encrypting data at rest (for example, AWS Key Management Service [AWS KMS])
• Encrypting data in transit (for example, AWS Certificate Manager [ACM] using TLS)
• Implementing access policies for encryption keys
• Implementing data backups and replications
• Implementing policies for data access, lifecycle, and protection
• Rotating encryption keys and renewing certificates
Domain 2: Design Resilient Architectures
Task Statement 1: Design scalable and loosely coupled architectures.
Knowledge of:
• API creation and management (for example, Amazon API Gateway, REST API)
• AWS managed services with appropriate use cases (for example, AWS Transfer Family, Amazon
Simple Queue Service [Amazon SQS], Secrets Manager)
• Caching strategies
• Design principles for microservices (for example, stateless workloads compared with stateful
workloads)
• Event-driven architectures
• Horizontal scaling and vertical scaling
• How to appropriately use edge accelerators (for example, content delivery network [CDN])
• How to migrate applications into containers
• Load balancing concepts (for example, Application Load Balancer)
• Multi-tier architectures
• Queuing and messaging concepts (for example, publish/subscribe)
• Serverless technologies and patterns (for example, AWS Fargate, AWS Lambda)
• Storage types with associated characteristics (for example, object, file, block)
• The orchestration of containers (for example, Amazon Elastic Container Service [Amazon ECS],
Amazon Elastic Kubernetes Service [Amazon EKS])
• When to use read replicas
• Workflow orchestration (for example, AWS Step Functions)
Version 1.0 SAA-C03 5 | PAGE
Skills in:
• Designing event-driven, microservice, and/or multi-tier architectures based on requirements
• Determining scaling strategies for components used in an architecture design
• Determining the AWS services required to achieve loose coupling based on requirements
• Determining when to use containers
• Determining when to use serverless technologies and patterns
• Recommending appropriate compute, storage, networking, and database technologies based
on requirements
• Using purpose-built AWS services for workloads
Task Statement 2: Design highly available and/or fault-tolerant architectures.
Knowledge of:
• AWS global infrastructure (for example, Availability Zones, AWS Regions, Amazon Route 53)
• AWS managed services with appropriate use cases (for example, Amazon Comprehend,
Amazon Polly)
• Basic networking concepts (for example, route tables)
• Disaster recovery (DR) strategies (for example, backup and restore, pilot light, warm standby,
active-active failover, recovery point objective [RPO], recovery time objective [RTO])
• Distributed design patterns
• Failover strategies
• Immutable infrastructure
• Load balancing concepts (for example, Application Load Balancer)
• Proxy concepts (for example, Amazon RDS Proxy)
• Service quotas and throttling (for example, how to configure the service quotas for a workload
in a standby environment)
• Storage options and characteristics (for example, durability, replication)
• Workload visibility (for example, AWS X-Ray)
Skills in:
• Determining automation strategies to ensure infrastructure integrity
• Determining the AWS services required to provide a highly available and/or fault-tolerant
architecture across AWS Regions or Availability Zones
• Identifying metrics based on business requirements to deliver a highly available solution
• Implementing designs to mitigate single points of failure
• Implementing strategies to ensure the durability and availability of data (for example, backups)
• Selecting an appropriate DR strategy to meet business requirements
• Using AWS services that improve the reliability of legacy applications and applications not built
for the cloud (for example, when application changes are not possible)
• Using purpose-built AWS services for workloads
Version 1.0 SAA-C03 6 | PAGE
Domain 3: Design High-Performing Architectures
Task Statement 1: Determine high-performing and/or scalable storage solutions.
Knowledge of:
• Hybrid storage solutions to meet business requirements
• Storage services with appropriate use cases (for example, Amazon S3, Amazon Elastic File
System [Amazon EFS], Amazon Elastic Block Store [Amazon EBS])
• Storage types with associated characteristics (for example, object, file, block)
Skills in:
• Determining storage services and configurations that meet performance demands
• Determining storage services that can scale to accommodate future needs
Task Statement 2: Design high-performing and elastic compute solutions.
Knowledge of:
• AWS compute services with appropriate use cases (for example, AWS Batch, Amazon EMR,
Fargate)
• Distributed computing concepts supported by AWS global infrastructure and edge services
• Queuing and messaging concepts (for example, publish/subscribe)
• Scalability capabilities with appropriate use cases (for example, Amazon EC2 Auto Scaling,
AWS Auto Scaling)
• Serverless technologies and patterns (for example, Lambda, Fargate)
• The orchestration of containers (for example, Amazon ECS, Amazon EKS)
Skills in:
• Decoupling workloads so that components can scale independently
• Identifying metrics and conditions to perform scaling actions
• Selecting the appropriate compute options and features (for example, EC2 instance types) to
meet business requirements
• Selecting the appropriate resource type and size (for example, the amount of Lambda
memory) to meet business requirements
Task Statement 3: Determine high-performing database solutions.
Knowledge of:
• AWS global infrastructure (for example, Availability Zones, AWS Regions)
• Caching strategies and services (for example, Amazon ElastiCache)
• Data access patterns (for example, read-intensive compared with write-intensive)
• Database capacity planning (for example, capacity units, instance types, Provisioned IOPS)
• Database connections and proxies
• Database engines with appropriate use cases (for example, heterogeneous migrations,
homogeneous migrations)
• Database replication (for example, read replicas)
• Database types and services (for example, serverless, relational compared with non-relational,
in-memory)
Version 1.0 SAA-C03 7 | PAGE
Skills in:
• Configuring read replicas to meet business requirements
• Designing database architectures
• Determining an appropriate database engine (for example, MySQL compared with
PostgreSQL)
• Determining an appropriate database type (for example, Amazon Aurora, Amazon DynamoDB)
• Integrating caching to meet business requirements
Task Statement 4: Determine high-performing and/or scalable network architectures.
Knowledge of:
• Edge networking services with appropriate use cases (for example, Amazon CloudFront, AWS
Global Accelerator)
• How to design network architecture (for example, subnet tiers, routing, IP addressing)
• Load balancing concepts (for example, Application Load Balancer)
• Network connection options (for example, AWS VPN, Direct Connect, AWS PrivateLink)
Skills in:
• Creating a network topology for various architectures (for example, global, hybrid, multi-tier)
• Determining network configurations that can scale to accommodate future needs
• Determining the appropriate placement of resources to meet business requirements
• Selecting the appropriate load balancing strategy
Task Statement 5: Determine high-performing data ingestion and transformation solutions.
Knowledge of:
• Data analytics and visualization services with appropriate use cases (for example, Amazon
Athena, AWS Lake Formation, Amazon QuickSight)
• Data ingestion patterns (for example, frequency)
• Data transfer services with appropriate use cases (for example, AWS DataSync, AWS Storage
Gateway)
• Data transformation services with appropriate use cases (for example, AWS Glue)
• Secure access to ingestion access points
• Sizes and speeds needed to meet business requirements
• Streaming data services with appropriate use cases (for example, Amazon Kinesis)
Skills in:
• Building and securing data lakes
• Designing data streaming architectures
• Designing data transfer solutions
• Implementing visualization strategies
• Selecting appropriate compute options for data processing (for example, Amazon EMR)
• Selecting appropriate configurations for ingestion
• Transforming data between formats (for example, .csv to .parquet)
Version 1.0 SAA-C03 8 | PAGE
Domain 4: Design Cost-Optimized Architectures
Task Statement 1: Design cost-optimized storage solutions.
Knowledge of:
• Access options (for example, an S3 bucket with Requester Pays object storage)
• AWS cost management service features (for example, cost allocation tags, multi-account
billing)
• AWS cost management tools with appropriate use cases (for example, AWS Cost Explorer,
AWS Budgets, AWS Cost and Usage Report)
• AWS storage services with appropriate use cases (for example, Amazon FSx, Amazon EFS,
Amazon S3, Amazon EBS)
• Backup strategies
• Block storage options (for example, hard disk drive [HDD] volume types, solid state drive [SSD]
volume types)
• Data lifecycles
• Hybrid storage options (for example, DataSync, Transfer Family, Storage Gateway)
• Storage access patterns
• Storage tiering (for example, cold tiering for object storage)
• Storage types with associated characteristics (for example, object, file, block)
Skills in:
• Designing appropriate storage strategies (for example, batch uploads to Amazon S3 compared
with individual uploads)
• Determining the correct storage size for a workload
• Determining the lowest cost method of transferring data for a workload to AWS storage
• Determining when storage auto scaling is required
• Managing S3 object lifecycles
• Selecting the appropriate backup and/or archival solution
• Selecting the appropriate service for data migration to storage services
• Selecting the appropriate storage tier
• Selecting the correct data lifecycle for storage
• Selecting the most cost-effective storage service for a workload
Version 1.0 SAA-C03 9 | PAGE
Task Statement 2: Design cost-optimized compute solutions.
Knowledge of:
• AWS cost management service features (for example, cost allocation tags, multi-account
billing)
• AWS cost management tools with appropriate use cases (for example, Cost Explorer, AWS
Budgets, AWS Cost and Usage Report)
• AWS global infrastructure (for example, Availability Zones, AWS Regions)
• AWS purchasing options (for example, Spot Instances, Reserved Instances, Savings Plans)
• Distributed compute strategies (for example, edge processing)
• Hybrid compute options (for example, AWS Outposts, AWS Snowball Edge)
• Instance types, families, and sizes (for example, memory optimized, compute optimized,
virtualization)
• Optimization of compute utilization (for example, containers, serverless computing,
microservices)
• Scaling strategies (for example, auto scaling, hibernation)
Skills in:
• Determining an appropriate load balancing strategy (for example, Application Load Balancer
[Layer 7] compared with Network Load Balancer [Layer 4] compared with Gateway Load
Balancer)
• Determining appropriate scaling methods and strategies for elastic workloads (for example,
horizontal compared with vertical, EC2 hibernation)
• Determining cost-effective AWS compute services with appropriate use cases (for example,
Lambda, Amazon EC2, Fargate)
• Determining the required availability for different classes of workloads (for example,
production workloads, non-production workloads)
• Selecting the appropriate instance family for a workload
• Selecting the appropriate instance size for a workload
Task Statement 3: Design cost-optimized database solutions.
Knowledge of:
• AWS cost management service features (for example, cost allocation tags, multi-account
billing)
• AWS cost management tools with appropriate use cases (for example, Cost Explorer, AWS
Budgets, AWS Cost and Usage Report)
• Caching strategies
• Data retention policies
• Database capacity planning (for example, capacity units)
• Database connections and proxies
• Database engines with appropriate use cases (for example, heterogeneous migrations,
homogeneous migrations)
• Database replication (for example, read replicas)
• Database types and services (for example, relational compared with non-relational, Aurora,
DynamoDB)
Version 1.0 SAA-C03 10 | PAGE
Skills in:
• Designing appropriate backup and retention policies (for example, snapshot frequency)
• Determining an appropriate database engine (for example, MySQL compared with
PostgreSQL)
• Determining cost-effective AWS database services with appropriate use cases (for example,
DynamoDB compared with Amazon RDS, serverless)
• Determining cost-effective AWS database types (for example, time series format, columnar
format)
• Migrating database schemas and data to different locations and/or different database engines
Task Statement 4: Design cost-optimized network architectures.
Knowledge of:
• AWS cost management service features (for example, cost allocation tags, multi-account
billing)
• AWS cost management tools with appropriate use cases (for example, Cost Explorer, AWS
Budgets, AWS Cost and Usage Report)
• Load balancing concepts (for example, Application Load Balancer)
• NAT gateways (for example, NAT instance costs compared with NAT gateway costs)
• Network connectivity (for example, private lines, dedicated lines, VPNs)
• Network routing, topology, and peering (for example, AWS Transit Gateway, VPC peering)
• Network services with appropriate use cases (for example, DNS)
Skills in:
• Configuring appropriate NAT gateway types for a network (for example, a single shared NAT
gateway compared with NAT gateways for each Availability Zone)
• Configuring appropriate network connections (for example, Direct Connect compared with
VPN compared with internet)
• Configuring appropriate network routes to minimize network transfer costs (for example,
Region to Region, Availability Zone to Availability Zone, private to public, Global Accelerator,
VPC endpoints)
• Determining strategic needs for content delivery networks (CDNs) and edge caching
• Reviewing existing workloads for network optimizations
• Selecting an appropriate throttling strategy
• Selecting the appropriate bandwidth allocation for a network device (for example, a single
VPN compared with multiple VPNs, Direct Connect speed)

